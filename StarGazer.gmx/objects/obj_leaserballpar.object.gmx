<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_bulletpar</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Remove this and the up down key envent. 
//This is only used to zoom in and out
ct = 0;

////
m_Halo = spr_star_shine32;
m_Star = spr_star_face32;
m_Gas = spr_star_face32;

m_HaloBM = bm_add;
m_StarBM = bm_add;
m_GasBM = bm_add;

m_StarColor = c_yellow;
m_GasColor = c_white;
m_HaloColor = c_white;

m_StarDensity = 1; // 0 to 1
m_GasDensity = 1; //0 to 1
m_HaloDensity = 1; //0 to 1

m_Scale = 1;
m_StarDegPerSec = 10;
m_GasDegPerSec = 2;

m_Angle = random(360);
m_Angle2 = random(360);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Have d = .01 on create

if(m_HaloDensity&gt;0) 
{
    draw_set_blend_mode(m_HaloBM);
    draw_sprite_ext(m_Halo,0,x,y, m_Scale * 1.5 + .1, m_Scale * 1.5 + .1, 0, m_HaloColor, m_HaloDensity);
}
if(m_StarDensity&gt;0)
{
    draw_set_blend_mode(m_StarBM);
    draw_sprite_ext(m_Star,0,x,y,m_Scale,m_Scale,m_Angle,m_StarColor,m_StarDensity);
}
if(m_GasDensity&gt;0)
{
    draw_set_blend_mode(m_GasBM);
    draw_sprite_ext(m_Gas,0,x,y,m_Scale,m_Scale,m_Angle2,m_GasColor,m_GasDensity);
}
m_Angle +=(m_StarDegPerSec)/room_speed;
m_Angle2 +=(m_GasDegPerSec)/room_speed;
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
